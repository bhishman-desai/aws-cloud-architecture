AWSTemplateFormatVersion: '2010-09-09'
Description: >
  CloudFormation template for setting up public load balancing and auto scaling for the web tier.
  Follows 6 pillars of well architected framework along with their best practices.

Parameters:
  NamingPrefix:
    Type: String
    Default: term-end-web
    Description: Prefix for naming AWS resources

  CertificateArn:
    Type: String
    Description: ARN of the SSL certificate for HTTPS
    Default: arn:aws:acm:region:account-id:certificate/certificate-id

Resources:
  # Target Group
  WebTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub '${NamingPrefix}-target-group'
      Protocol: HTTP
      Port: 80
      VpcId: !ImportValue core-infrastructure-VPCId
      TargetType: instance
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: /
      HealthCheckPort: traffic-port
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 5
      UnhealthyThresholdCount: 2
      Matcher:
        HttpCode: 200

  # Load Balancer
  WebLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Sub '${NamingPrefix}-public-alb'
      Scheme: internet-facing
      Subnets:
        - !ImportValue core-infrastructure-PublicSubnet1Id
        - !ImportValue core-infrastructure-PublicSubnet2Id
      SecurityGroups:
        - !ImportValue core-infrastructure-PublicLoadBalancerSG
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: '60'

  # Listener
  WebListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref WebLoadBalancer
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref WebTargetGroup

  # HTTPS Listener
  WebHttpsListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref WebLoadBalancer
      Port: 443
      Protocol: HTTPS
      Certificates:
        - CertificateArn: !Ref CertificateArn
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref WebTargetGroup

  # Auto Scaling Group
  WebAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Sub '${NamingPrefix}-asg'
      LaunchTemplate:
        LaunchTemplateId: !ImportValue web-WebLaunchTemplateId
        Version: !ImportValue web-WebLaunchTemplateVersion
      VPCZoneIdentifier:
        - !ImportValue core-infrastructure-PublicSubnet1Id
        - !ImportValue core-infrastructure-PublicSubnet2Id
      TargetGroupARNs:
        - !Ref WebTargetGroup
      MinSize: 2
      MaxSize: 3
      DesiredCapacity: 2
      HealthCheckType: ELB
      HealthCheckGracePeriod: 300
      Tags:
        - Key: Name
          Value: !Sub '${NamingPrefix}-web-instance'
          PropagateAtLaunch: true

Outputs:
  LoadBalancerDNSName:
    Description: DNS name of the public load balancer
    Value: !GetAtt WebLoadBalancer.DNSName
    Export:
      Name: !Sub '${AWS::StackName}-WebLoadBalancerDNSName'

  TargetGroupArn:
    Description: ARN of the target group
    Value: !Ref WebTargetGroup
    Export:
      Name: !Sub '${AWS::StackName}-WebTargetGroupArn'

  AutoScalingGroupName:
    Description: Name of the Auto Scaling group
    Value: !Ref WebAutoScalingGroup
    Export:
      Name: !Sub '${AWS::StackName}-WebAutoScalingGroupName'

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Web Tier Load Balancer and Auto Scaling Configuration"
        Parameters:
          - NamingPrefix
          - CertificateArn
    ParameterLabels:
      NamingPrefix:
        default: "Naming Prefix"
      CertificateArn:
        default: "SSL Certificate ARN"
