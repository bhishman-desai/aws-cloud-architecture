AWSTemplateFormatVersion: '2010-09-09'
Description: >
  CloudFormation template for setting up public load balancing and auto scaling for the web tier.
  Follows 6 pillars of well architected framework along with their best practices.

Parameters:
  NamingPrefix:
    Type: String
    Default: term-end-web
    Description: Prefix for naming AWS resources

  CertificateArn:
    Type: String
    Description: ARN of the SSL certificate for HTTPS
    Default: arn:aws:acm:region:account-id:certificate/certificate-id

  InstanceType:
    Type: String
    Description: EC2 instance type for the web tier
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
      - t3.micro
      - t3.small
      - t3.medium
    Default: t3.micro

  WebTargetGroupPort:
    Type: Number
    Description: Port for the target group
    Default: 80

  WebListenerPort:
    Type: Number
    Description: Port for the load balancer listener
    Default: 80

  MinSize:
    Type: Number
    Description: Minimum size of the Auto Scaling group
    Default: 2

  MaxSize:
    Type: Number
    Description: Maximum size of the Auto Scaling group
    Default: 3

  DesiredCapacity:
    Type: Number
    Description: Desired capacity of the Auto Scaling group
    Default: 2

Resources:
  # Custom Resource to capture the AMI ID from the Wrapper Lambda Function
  CreateAmiCustomResource:
    Type: Custom::CreateAmi
    Properties:
      ServiceToken: !ImportValue app-WrappingLambdaFunctionArn
      ServiceTimeout: 300
      LambdaFunctionName: !ImportValue app-CreateAmiFunctionName
      InstanceId: !ImportValue web-WebTierInstanceId
      ImageName: !Sub 'web-tier-image'

  # Create a Launch Template from the AMI
  WebLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: !Sub 'web-tier-launch-template'
      LaunchTemplateData:
        ImageId: !GetAtt CreateAmiCustomResource.ImageId
        InstanceType: !Ref InstanceType
        SecurityGroupIds:
          - !ImportValue core-infrastructure-PublicInstanceSGId
        IamInstanceProfile:
          Name: !ImportValue web-WebProfile

  # Target Group
  WebTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub '${NamingPrefix}-target-group'
      Protocol: HTTP
      Port: !Ref WebTargetGroupPort
      VpcId: !ImportValue core-infrastructure-VPCId
      TargetType: instance
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: /
      HealthCheckPort: traffic-port
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 5
      UnhealthyThresholdCount: 2
      Matcher:
        HttpCode: 200

  # Load Balancer
  WebLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Sub '${NamingPrefix}-public-alb'
      Scheme: internet-facing
      Subnets:
        - !ImportValue core-infrastructure-PublicSubnet1Id
        - !ImportValue core-infrastructure-PublicSubnet2Id
      SecurityGroups:
        - !ImportValue core-infrastructure-PublicLoadBalancerSG
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: '60'

  # Listener
  WebListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref WebLoadBalancer
      Port: !Ref WebListenerPort
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref WebTargetGroup

  # HTTPS Listener
  #  WebHttpsListener:
  #    Type: AWS::ElasticLoadBalancingV2::Listener
  #    Properties:
  #      LoadBalancerArn: !Ref WebLoadBalancer
  #      Port: 443
  #      Protocol: HTTPS
  #      Certificates:
  #        - CertificateArn: !Ref CertificateArn
  #      DefaultActions:
  #        - Type: forward
  #          TargetGroupArn: !Ref WebTargetGroup

  # Auto Scaling Group
  WebAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Sub '${NamingPrefix}-asg'
      LaunchTemplate:
        LaunchTemplateId: !Ref WebLaunchTemplate
        Version: !GetAtt WebLaunchTemplate.LatestVersionNumber
      VPCZoneIdentifier:
        - !ImportValue core-infrastructure-PublicSubnet1Id
        - !ImportValue core-infrastructure-PublicSubnet2Id
      TargetGroupARNs:
        - !Ref WebTargetGroup
      MinSize: !Ref MinSize
      MaxSize: !Ref MaxSize
      DesiredCapacity: !Ref DesiredCapacity
      HealthCheckType: ELB
      HealthCheckGracePeriod: 300
      Tags:
        - Key: Name
          Value: !Sub '${NamingPrefix}-web-instance'
          PropagateAtLaunch: true

Outputs:
  LoadBalancerDNSName:
    Description: DNS name of the public load balancer
    Value: !GetAtt WebLoadBalancer.DNSName
    Export:
      Name: !Sub '${AWS::StackName}-WebLoadBalancerDNSName'

  TargetGroupArn:
    Description: ARN of the target group
    Value: !Ref WebTargetGroup
    Export:
      Name: !Sub '${AWS::StackName}-WebTargetGroupArn'

  AutoScalingGroupName:
    Description: Name of the Auto Scaling group
    Value: !Ref WebAutoScalingGroup
    Export:
      Name: !Sub '${AWS::StackName}-WebAutoScalingGroupName'

  LaunchTemplateId:
    Description: The Launch Template ID of the web tier
    Value: !Ref WebLaunchTemplate
    Export:
      Name: !Sub 'web-WebLaunchTemplateId'

  LaunchTemplateVersion:
    Description: The version of the Launch Template
    Value: !GetAtt WebLaunchTemplate.LatestVersionNumber
    Export:
      Name: !Sub 'web-WebLaunchTemplateVersion'

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Web Tier Load Balancer and Auto Scaling Configuration"
        Parameters:
          - NamingPrefix
          - CertificateArn
          - InstanceType
          - WebTargetGroupPort
          - WebListenerPort
          - MinSize
          - MaxSize
          - DesiredCapacity
    ParameterLabels:
      NamingPrefix:
        default: "Naming Prefix"
      CertificateArn:
        default: "SSL Certificate ARN"
      InstanceType:
        default: "Instance Type"
      WebTargetGroupPort:
        default: "Target Group Port"
      WebListenerPort:
        default: "Listener Port"
      MinSize:
        default: "Minimum Auto Scaling Group Size"
      MaxSize:
        default: "Maximum Auto Scaling Group Size"
      DesiredCapacity:
        default: "Desired Auto Scaling Group Size"
